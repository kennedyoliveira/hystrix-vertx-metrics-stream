buildscript {
    repositories { jcenter() }
    dependencies {
        classpath 'com.netflix.nebula:nebula-publishing-plugin:4.4.4'
    }
}

plugins {
    id 'nebula.dependency-recommender' version '3.1.0'
    id 'nebula.dependency-lock' version '4.2.0'
    id 'nebula.nebula-release' version '4.0.1'
    id 'nebula.contacts' version '3.0.1'
    id 'nebula.info' version '3.0.3'
    id 'nebula.nebula-bintray' version '3.3.4'
}

apply plugin: 'java'
apply plugin: 'nebula.maven-publish'
apply plugin: 'nebula.nebula-bintray-publishing'
apply plugin: 'nebula.source-jar'
apply plugin: 'nebula.javadoc-jar'
apply plugin: 'nebula.info'

// QA plugins
apply plugin: 'pmd'
apply plugin: 'findbugs'
apply plugin: 'build-dashboard'

group 'com.github.kennedyoliveira'
description = 'Implementation of a Metrics Event Stream using Vert.x'

def recomendationsFile = rootProject.file('dependencies-version.properties')

dependencyRecommendations {
    propertiesFile file: recomendationsFile
}

repositories {
    mavenCentral()
}

contacts {
    'kennedy.oliveira@outlook.com' {
        moniker 'Kennedy Oliveira'
        github 'kennedyoliveira'
        roles 'owner', 'developer', 'notify'
    }
}

dependencies {
    compile 'com.netflix.hystrix:hystrix-core'
    compile 'org.codehaus.jackson:jackson-core-asl'
    compile 'org.codehaus.jackson:jackson-mapper-asl'

    compile group: 'io.vertx', name: 'vertx-core'
    compile group: 'io.vertx', name: 'vertx-web'
    testCompile group: 'io.vertx', name: 'vertx-unit'

    testCompile 'junit:junit'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}

// qa plugin configuration to export html instead of xml
tasks.withType(FindBugs) {
    reports {
        html.enabled = true
        xml.enabled = false
    }
}

tasks.withType(Pmd) {
    reports {
        html.enabled = true
        xml.enabled = false
    }
}

publishing {
    publications {
        nebula(MavenPublication) {
            pom.withXml {
                asNode().appendNode('licenses').appendNode('license').with {
                    appendNode('name', 'MIT License')
                    appendNode('url', 'https://opensource.org/licenses/MIT')
                    appendNode('distribution', 'repo')
                }
            }
        }
    }
}

bintray {
    pkg {
        repo = 'maven'
        userOrg = ''
        licenses = ['MIT']
        websiteUrl = 'https://github.com/kennedyoliveira/hystrix-vertx-metrics-stream'
        issueTrackerUrl = 'https://github.com/kennedyoliveira/hystrix-vertx-metrics-stream/issues'
        vcsUrl = 'https://github.com/kennedyoliveira/hystrix-vertx-metrics-stream.git'
        labels = ['gradle', 'hyxtrix', 'vertx3', 'metrics-stream']
        publicDownloadNumbers = true
        version {
            gpg {
                if (project.hasProperty('bintraySignPass'))
                    passphrase = project.property('bintraySignPass')
            }
        }
    }
}